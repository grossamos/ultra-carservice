apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-k8s-deployment
spec:
  selector:
    matchLabels:
      app: angular-k8s-deployment
  replicas: 3
  template:
    metadata:
      labels:
        app: angular-k8s-deployment
    spec:
      containers:
        - name: angular-k8s-deployment
          image: ultra-service-angular
          imagePullPolicy: Never
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: angular-k8s-service
  labels:
    name: angular-k8s-deployment
spec:
  ports:
    - nodePort: 30170
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: angular-k8s-deployment
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-database
spec:
  selector:
    matchLabels:
      app: postgres-k8s-deployment
  serviceName: postgres-k8s-service
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-k8s-deployment
    spec:
      containers:
        - name: postgres-k8s-deployment
          image: postgres
          volumeMounts:
            - name: postgres-disk
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: psqlsecret
                  key: PSQL_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: kubernetes-config
                  key: PSQL_DB
  volumeClaimTemplates:
    - metadata:
        name: postgres-disk
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 0.01Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-k8s-service
  labels:
    name: postgres-k8s-deployment
spec:
  ports:
    - nodePort: 30172
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres-k8s-deployment
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-k8s-deployment
spec:
  selector:
    matchLabels:
      app: springboot-k8s-deployment
  replicas: 3
  template:
    metadata:
      labels:
        app: springboot-k8s-deployment
    spec:
      containers:
        - name: springboot-k8s-deployment
          image: ultra-service-springboot
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-k8s-service
  labels:
    name: springboot-k8s-deployment
spec:
  ports:
    - nodePort: 30171
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: springboot-k8s-deployment
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ultra-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: angular-k8s-service
                port:
                  number: 80